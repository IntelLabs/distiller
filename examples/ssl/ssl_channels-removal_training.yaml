# SSL: Channel regularization
# We found the regularization to be "unstable": when we raise the regularization strength on one parameter's Channels,
# other parameters become denser.  It is very hard to direct the level and location of sparsity.
# We also found channel regualarization to be hard to accomplish in general, and we think this is due to the large size
# of the channel structure.
#
# time python3 compress_classifier.py --arch resnet20_cifar  ../../../data.cifar10 -p=50 --lr=0.3 --epochs=180 --compress=../ssl/ssl_channels-removal_training.yaml -j=1 --deterministic
#
# Parameters:
# +----+-------------------------------------+----------------+---------------+----------------+------------+------------+----------+----------+----------+------------+---------+----------+------------+
# |    | Name                                | Shape          |   NNZ (dense) |   NNZ (sparse) |   Cols (%) |   Rows (%) |   Ch (%) |   2D (%) |   3D (%) |   Fine (%) |     Std |     Mean |   Abs-Mean |
# |----+-------------------------------------+----------------+---------------+----------------+------------+------------+----------+----------+----------+------------+---------+----------+------------|
# |  0 | module.conv1.weight                 | (16, 3, 3, 3)  |           432 |            432 |    0.00000 |    0.00000 |  0.00000 |  0.00000 |  0.00000 |    0.00000 | 0.45702 | -0.01021 |    0.31791 |
# |  1 | module.layer1.0.conv1.weight        | (16, 16, 3, 3) |          2304 |           2304 |    0.00000 |    0.00000 |  0.00000 |  0.00000 |  0.00000 |    0.00000 | 0.14983 | -0.00925 |    0.08673 |
# |  2 | module.layer1.0.conv2.weight        | (16, 16, 3, 3) |          2304 |           1584 |    0.00000 |    0.00000 | 31.25000 | 31.25000 |  0.00000 |   31.25000 | 0.03077 |  0.00275 |    0.01787 |
# |  3 | module.layer1.1.conv1.weight        | (16, 16, 3, 3) |          2304 |           2304 |    0.00000 |    0.00000 |  0.00000 |  0.00000 |  0.00000 |    0.00000 | 0.10768 | -0.00699 |    0.05539 |
# |  4 | module.layer1.1.conv2.weight        | (16, 16, 3, 3) |          2304 |           1152 |    0.00000 |    0.00000 | 50.00000 | 50.00000 |  0.00000 |   50.00000 | 0.02099 | -0.00038 |    0.00869 |
# |  5 | module.layer1.2.conv1.weight        | (16, 16, 3, 3) |          2304 |           2304 |    0.00000 |    0.00000 |  0.00000 |  0.00000 |  0.00000 |    0.00000 | 0.14116 | -0.00914 |    0.07375 |
# |  6 | module.layer1.2.conv2.weight        | (16, 16, 3, 3) |          2304 |           1152 |    0.00000 |    0.00000 | 50.00000 | 50.00000 |  0.00000 |   50.00000 | 0.02823 |  0.00048 |    0.01376 |
# |  7 | module.layer2.0.conv1.weight        | (32, 16, 3, 3) |          4608 |           4608 |    0.00000 |    0.00000 |  0.00000 |  0.00000 |  0.00000 |    0.00000 | 0.12183 | -0.00531 |    0.07323 |
# |  8 | module.layer2.0.conv2.weight        | (32, 32, 3, 3) |          9216 |           6624 |    0.00000 |    0.00000 | 28.12500 | 28.12500 |  0.00000 |   28.12500 | 0.02304 | -0.00011 |    0.01322 |
# |  9 | module.layer2.0.downsample.0.weight | (32, 16, 1, 1) |           512 |            512 |    0.00000 |    0.00000 |  0.00000 |  0.00000 |  0.00000 |    0.00000 | 0.34067 | -0.00968 |    0.22895 |
# | 10 | module.layer2.1.conv1.weight        | (32, 32, 3, 3) |          9216 |           9216 |    0.00000 |    0.00000 |  0.00000 |  0.00000 |  0.00000 |    0.00000 | 0.08078 | -0.00715 |    0.04777 |
# | 11 | module.layer2.1.conv2.weight        | (32, 32, 3, 3) |          9216 |           5184 |    0.00000 |    0.00000 | 43.75000 | 43.75000 |  0.00000 |   43.75000 | 0.01210 |  0.00018 |    0.00678 |
# | 12 | module.layer2.2.conv1.weight        | (32, 32, 3, 3) |          9216 |           9216 |    0.00000 |    0.00000 |  0.00000 |  0.00000 |  0.00000 |    0.00000 | 0.13492 | -0.01166 |    0.10453 |
# | 13 | module.layer2.2.conv2.weight        | (32, 32, 3, 3) |          9216 |           9216 |    0.00000 |    0.00000 |  0.00000 |  0.00000 |  0.00000 |    0.00000 | 0.12009 | -0.00109 |    0.09498 |
# | 14 | module.layer3.0.conv1.weight        | (64, 32, 3, 3) |         18432 |          18432 |    0.00000 |    0.00000 |  0.00000 |  0.00000 |  0.00000 |    0.00000 | 0.09374 | -0.00954 |    0.06696 |
# | 15 | module.layer3.0.conv2.weight        | (64, 64, 3, 3) |         36864 |          29376 |    0.00000 |    0.00000 | 20.31250 | 20.31250 |  0.00000 |   20.31250 | 0.02492 | -0.00000 |    0.01697 |
# | 16 | module.layer3.0.downsample.0.weight | (64, 32, 1, 1) |          2048 |           2048 |    0.00000 |    0.00000 |  0.00000 |  0.00000 |  0.00000 |    0.00000 | 0.20301 | -0.02229 |    0.15748 |
# | 17 | module.layer3.1.conv1.weight        | (64, 64, 3, 3) |         36864 |          36864 |    0.00000 |    0.00000 |  0.00000 |  0.00000 |  0.00000 |    0.00000 | 0.07494 | -0.00804 |    0.05342 |
# | 18 | module.layer3.1.conv2.weight        | (64, 64, 3, 3) |         36864 |          29952 |    0.00000 |    0.00000 | 18.75000 | 18.75000 |  0.00000 |   18.75000 | 0.01533 | -0.00050 |    0.01039 |
# | 19 | module.layer3.2.conv1.weight        | (64, 64, 3, 3) |         36864 |          36864 |    0.00000 |    0.00000 |  0.00000 |  0.00000 |  0.00000 |    0.00000 | 0.10166 | -0.01046 |    0.08069 |
# | 20 | module.layer3.2.conv2.weight        | (64, 64, 3, 3) |         36864 |          36864 |    0.00000 |    0.00000 |  0.00000 |  0.00000 |  0.00000 |    0.00000 | 0.06684 | -0.00197 |    0.05227 |
# | 21 | module.fc.weight                    | (10, 64)       |           640 |            640 |    0.00000 |    0.00000 |  0.00000 |  0.00000 |  0.00000 |    0.00000 | 0.64210 | -0.00003 |    0.53272 |
# | 22 | Total sparsity:                     | -              |        270896 |         246848 |    0.00000 |    0.00000 |  0.00000 |  0.00000 |  0.00000 |    8.87721 | 0.00000 |  0.00000 |    0.00000 |
# +----+-------------------------------------+----------------+---------------+----------------+------------+------------+----------+----------+----------+------------+---------+----------+------------+
# Total sparsity: 8.88
#
# --- validate (epoch=179)-----------
# 5000 samples (256 per mini-batch)
# ==> Top1: 90.640    Top5: 99.800    Loss: 0.321
#
# Saving checkpoint
# --- test ---------------------
# 10000 samples (256 per mini-batch)
# ==> Top1: 90.810    Top5: 99.770    Loss: 0.342
#
#
# Log file for this run: /home/cvds_lab/nzmora/pytorch_workspace/private-distiller/examples/classifier_compression/logs/2018.04.21-120843/2018.04.21-120843.log
#
# real    37m39.334s
# user    77m36.992s
# sys     10m27.006s


lr_schedulers:
  training_lr:
    class: StepLR
    step_size: 45
    gamma: 0.10

regularizers:
  Channels_groups_regularizer:
    class: GroupLassoRegularizer
    reg_regims:
      #module.layer1.0.conv1.weight: [0.0008, Channels]
      module.layer1.0.conv2.weight: [0.0008, Channels]
      #module.layer1.1.conv1.weight: [0.0008, Channels]
      module.layer1.1.conv2.weight: [0.0008, Channels]
      #module.layer1.2.conv1.weight: [0.0008, Channels]
      module.layer1.2.conv2.weight: [0.0008, Channels]
      #module.layer2.0.conv1.weight: [0.0008, Channels]
      module.layer2.0.conv2.weight: [0.0008, Channels]
      #module.layer2.1.conv1.weight: [0.0008, Channels]
      module.layer2.1.conv2.weight: [0.0008, Channels]
      #module.layer2.1.conv1.weight: [0.0008, Channels]
      module.layer2.1.conv2.weight: [0.0008, Channels]
      #module.layer3.0.conv1.weight: [0.0008, Channels]
      module.layer3.0.conv2.weight: [0.0008, Channels]
      #module.layer3.1.conv1.weight: [0.0008, Channels]
      module.layer3.1.conv2.weight: [0.0008, Channels]
      #module.layer3.2.conv1.weight: [0.0008, Channels]
      module.layer3.1.conv2.weight: [0.0008, Channels]
    threshold_criteria: Mean_Abs

extensions:
  net_thinner:
      class: 'ResnetCifarChannelRemover'
      thinning_func_str: resnet_cifar_remove_channels

policies:
  - lr_scheduler:
      instance_name: training_lr
    starting_epoch: 45
    ending_epoch: 300
    frequency: 1

# After completeing the regularization, we perform network thinning and exit.
  - extension:
      instance_name: net_thinner
    epochs: [179]

  - regularizer:
      instance_name: Channels_groups_regularizer
      args:
        keep_mask: True
    starting_epoch: 0
    ending_epoch: 180
    frequency: 1
